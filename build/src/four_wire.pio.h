// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --------------------- //
// picostepper_four_wire //
// --------------------- //

#define picostepper_four_wire_wrap_target 0
#define picostepper_four_wire_wrap 13

static const uint16_t picostepper_four_wire_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x6041, //  1: out    y, 1                       
    0x0060, //  2: jmp    !y, 0                      
    0x6041, //  3: out    y, 1                       
    0x603e, //  4: out    x, 30                      
    0x006a, //  5: jmp    !y, 10                     
    0xe009, //  6: set    pins, 9                    
    0x0047, //  7: jmp    x--, 7                     
    0xe00a, //  8: set    pins, 10                   
    0x0000, //  9: jmp    0                          
    0xe005, // 10: set    pins, 5                    
    0x004b, // 11: jmp    x--, 11                    
    0xe006, // 12: set    pins, 6                    
    0x0000, // 13: jmp    0                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program picostepper_four_wire_program = {
    .instructions = picostepper_four_wire_program_instructions,
    .length = 14,
    .origin = -1,
};

static inline pio_sm_config picostepper_four_wire_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + picostepper_four_wire_wrap_target, offset + picostepper_four_wire_wrap);
    return c;
}

  static inline void picostepper_four_wire_program_init(PIO pio, uint sm, uint offset, uint base_pin, uint clkdiv) {
      // General configuration for the pio systems
      pio_sm_config c = picostepper_four_wire_program_get_default_config(offset);
      sm_config_set_clkdiv(&c, clkdiv);
      sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
      // SET PINS
      pio_gpio_init(pio, base_pin); 
      pio_gpio_init(pio, base_pin + 1); 
      pio_gpio_init(pio, base_pin + 2); 
      pio_gpio_init(pio, base_pin + 3); 
      pio_sm_set_consecutive_pindirs(pio, sm, base_pin, 4, true);
      pio_sm_set_set_pins(pio, sm, base_pin, 4);
      sm_config_set_set_pins(&c, base_pin, 4);
      // Start PIO-Program
      pio_sm_init(pio, sm, offset, &c);
      pio_sm_set_enabled(pio, sm, true);
  }

#endif

